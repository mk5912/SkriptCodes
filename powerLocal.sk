
# These options can be changed to whatever you like however
# if you change the permission option (perm) you will have
# to set up that permission in the permissions.yml file!
options:
	perm: op
	permMessage: You do not have access to that command!



# DO NOT CHANGE ANYTHING BELOW THIS POINT, YOU COULD PREVENT
# THE ENTIRE SCRIPT FROM WORKING CORRECTLY IF YOU DO!






















on load:
	set {shutdown} to false
	set {stop} to false
	set {restart} to false
	clear {abort}
	clear {reset}
	clear {temp}
	clear {temp2}

command /shutdown:
	permission: {@perm}
	permission message: {@permMessage}
	description: "Works with the run file to turn off the hosting device after stopping the server."
	trigger:
		clear {temp}
		clear {temp2}
		set {shutdown} to true
		if {shutdown} is true:
			message "Shutdown command successfully registered!"

command /stop:
	permission: {@perm}
	permission message: {@permMessage}
	description: "Stops the server after 60 seconds."
	trigger:
		clear {temp}
		clear {temp2}
		set {stop} to true
		if {stop} is true:
			message "Stop command successfully registered!"

command /restart:
	permission: {@perm}
	permission message: {@permMessage}
	description: "Restarts the server after 60 seconds."
	trigger:
		clear {temp}
		clear {temp2}
		set {restart} to true
		if {restart} is true:
			message "Restart command successfully registered!"

command /cancel:
	permission: {@perm}
	permission message: {@permMessage}
	description: Cancels/ aborts the current server shutdown state.
	aliases: abort
	trigger:
		clear {temp}
		clear {temp2}
		message "Abort command successfully registered!"
		if {shutdown} is true:
			set {shutdown} to false
			set {abort} to "shutdown"
			send action bar "Shutdown Aborted!" to all players
		else if {stop} is true:
			set {stop} to false
			set {abort} to "stop"
			send action bar "Shutdown Aborted!" to all players
		else if {restart} is true:
			set {restart} to false
			set {abort} to "restart"
			send action bar "Restart Aborted!" to all players
		else:
			message "Nothing to cancel!"

# command /reset <text>:
	# permission: {@perm}
	# permission message: {@permMessage}
	# description: Globally accross a bungeecord network (when used with Skungee) reloads the specified global script.
	# usage: /reset <global script>
	# trigger:
		# set {reset} to arg

every 4 tick:
	if {shutdown} is true:
		set {temp} to {temp} + 0.2
		set {temp2} to ceil(60.2 - {temp})
		send action bar "Server shutting down in <red>%{temp2}%<reset> seconds!" to all players
		send "Server shutting down in <red>%{temp2}%<reset> seconds!" to console
		if {temp} is 0.2:
			send "Prepare to shutdown!" to console
			set {restart} to false
			set {stop} to false
		if {temp} is 60.2:
			stop server
	if {stop} is true:
		set {temp} to {temp} + 0.2
		set {temp2} to ceil(60.2 - {temp})
		if {temp} is 0.2:
			if {shutdown} is true:
			send "Shutdown canceled!" to console
				set {shutdown} to false
				set {restart} to false
		send action bar "Server stopping in <red>%{temp2}%<reset> seconds!" to all players
		send "Server stopping in <red>%{temp2}%<reset> seconds!" to console
		if {temp} is 60.2:
			stop server
	if {restart} is true:
		set {temp} to {temp} + 0.2
		set {temp2} to ceil(60.2 - {temp})
		if {temp} is 0.2:
			if {shutdown} is true:
			send "Shutdown canceled!" to console
				set {shutdown} to false
				set {stop} to false
		send action bar "Server restarting in <red>%{temp2}%<reset> seconds!" to all players
		send "Server restarting in <red>%{temp2}%<reset> seconds!" to console
		if {temp} is 60.2:
			restart server
	if {abort} is set:
		if {abort} is "shutdown":
			send "Shutdown canceled!" to console
		execute console command "/cancel"
		wait 2 ticks
		clear {abort}
	# if {reset} is set:
		# execute console command "/skript reload % {reset}%"
		# clear {reset}